<?php
function entity_functions_menu() {
    $items = array();

    $items['entity_test/helloworld'] = array(
        'title' => 'Function Page',
        'page callback' => 'helloworld',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );

    $items['entity_test/new_user'] = array(
        'title' => 'Function Page',
        'page callback' => 'make_new_user',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );
    
    $items['entity_test/new_book'] = array(
        'title' => 'Function Page',
        'page callback' => 'make_new_book',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );
    $items['entity_test/new_request'] = array(
        'title' => 'Function Page',
        'page callback' => 'make_new_request',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );
    
    $items['book_list'] = array(
        'title' => 'Manager Approval',
        'page callback' => 'books_list',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );
    $items['foo/ajax/approve_books'] = array(
    'title' => t('foo AJAX'),
    'type' => MENU_CALLBACK,
    'page callback' => 'foo_ajax_approve_books',
    'access callback' => TRUE
  );
    $items['foo/ajax/reject_books'] = array(
    'title' => t('foo AJAX'),
    'type' => MENU_CALLBACK,
    'page callback' => 'foo_ajax_reject_books',
    'access callback' => TRUE
  );
    return $items;
}

function foo_ajax_reject_books()
{
    
    $id_to_reject=$_POST['id'];
    
    node_delete($id_to_reject);
    drupal_json_output('deleted');
}
function foo_ajax_approve_books()
{
    $id_to_approve=$_POST['id'];
    $node=node_load($id_to_approve);
    $node->field_moderator_approval[LANGUAGE_NONE]['0']['value']='0';
    node_save($node);
    drupal_json_output('complete');
}


function helloworld()
{
    
    return 'sample page';
}

function make_new_user($account)
{
    dpm(user_load(69));
    
    dpm('here');
//       $email='ajfyyyftyv2@sahil.com';
//       $pass='qwerty';
//    $firstname='firstname';
//    $lastname=='lastname';
    
       $email=$account['email'];
       $pass=$account['pass'];
    $firstname=$account['firstName'];
    $lastname=$account['lastName'];
    
   if(is_object(user_load_by_mail($email)))
   {
       return 'already a user';
       
   }
   
    
    $split = explode('@',$email);
    $name = $split[0];

    
    $users = db_select('users', 'u')
    ->fields('u', array('uid'))
    ->orderBy('u.uid',"DESC")    
    ->execute()
    ->fetchAll();


if(isset($users['0']->uid))
{
    $name=$name."(".($users['0']->uid+1).")";
}

 $new_user = array(
  'name' => $name,
  'pass' => $pass, // note: do not md5 the password
  'mail' => $email,
  'status' => 1,
  'init' => $email,
  'roles' => array(
    DRUPAL_AUTHENTICATED_RID => 'authenticated user',    
  ),
);

// The first parameter is sent blank so a new user is created.
user_save('', $new_user);

$u=user_load_by_mail($email);
$u->field_user_first_name['und']['0']['value']=$firstname;
$u->field_last_name['und']['0']['value']=$lastname;

user_save($u);
    dpm($u);
    
    return $u;
    return 'make new user';    
}
